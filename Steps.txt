1- write in a directory Terminal 
git clone https://github.com/hadiMh/Django_Docker_with_PostgreSql
================================================
2- Create private/public repository in your account github
================================================
3- in Terminal
echo "# OnlineShope" >> README.md
================================================
4- in Terminal
git init

Output:
    hint: Using 'master' as the name for the initial branch. This default branch name
    hint: is subject to change. To configure the initial branch name to use in all
    hint: of your new repositories, which will suppress this warning, call:
    hint: 
    hint: 	git config --global init.defaultBranch <name>
    hint: 
    hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
    hint: 'development'. The just-created branch can be renamed via this command:
    hint: 
    hint: 	git branch -m <name>
    Initialized empty Git repository in /home/sina/01-Repo/Tests/2_Django_Haji/.git/

================================================
5- in Terminal
git add README.md
================================================
6-  in Terminal
git commit -m "first commit"

Output:
    [master (root-commit) 5a882d4] first commit
    1 file changed, 1 insertion(+)
    create mode 100644 README.md

================================================
7-  in Terminal
git branch -M main
================================================
8-  in Terminal
git remote add origin git@github.com:sinalalebakhsh/OnlineShope.git
================================================
9-  in Terminal
git push -u origin main

Output:
    Enumerating objects: 3, done.
    Counting objects: 100% (3/3), done.
    Writing objects: 100% (3/3), 228 bytes | 228.00 KiB/s, done.
    Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
    To github.com:sinalalebakhsh/OnlineShope.git
    * [new branch]      main -> main
    Branch 'main' set up to track remote branch 'main' from 'origin'.
================================================
10- Check you repository link, make sure that will changed
================================================
11- paste everything from directory you cloned in step 1 from this link https://github.com/hadiMh/Django_Docker_with_PostgreSql
================================================
12- paste this file from this link in U.sh 
https://github.com/sinalalebakhsh/DjangoImages/blob/main/U.sh

file content: U.sh
    #!/bin/bash
    git add .
    git commit -m " 💠💠💠 "
    git push -u origin main 

    # with ScreenShot for showing demo png file
================================================
13- change permission U.sh by this command in Terminal
sudo chmod -R +x U.sh
================================================
14- Check permission file by this command in Terminal
ls -altsh

Output should be like this:
    total 44K
    4.0K -rwxrwxr-x  1 sina sina  122 Dec 30 09:04 U.sh
    4.0K drwxrwxr-x  4 sina sina 4.0K Dec 30 09:02 .
    4.0K drwxrwxr-x 13 sina sina 4.0K Dec 30 08:59 ..
    4.0K drwxrwxr-x  8 sina sina 4.0K Dec 30 08:46 .git
    4.0K drwxrwxr-x  3 sina sina 4.0K Dec 30 08:35 config
    4.0K -rw-rw-r--  1 sina sina  252 Dec 30 08:35 docker-compose.yml
    4.0K -rw-rw-r--  1 sina sina  165 Dec 30 08:35 Dockerfile
    4.0K -rw-rw-r--  1 sina sina   23 Dec 30 08:35 .gitignore
    4.0K -rw-rw-r--  1 sina sina  662 Dec 30 08:35 manage.py
    4.0K -rw-rw-r--  1 sina sina 1.9K Dec 30 08:35 README.md
    4.0K -rw-rw-r--  1 sina sina   83 Dec 30 08:35 requirements.txt
================================================
15- run this for first time use docker-compose
sudo apt  install docker-compose

Output should be like this:
    [sudo] password for sina: 
    Reading package lists... Done
    Building dependency tree... Done
    Reading state information... Done
    The following additional packages will be installed:
    python3-attr python3-docker python3-dockerpty python3-docopt python3-dotenv python3-jsonschema python3-pyrsistent python3-texttable python3-websocket
    Suggested packages:
    python-attr-doc python-jsonschema-doc
    Recommended packages:
    docker.io
    The following NEW packages will be installed:
    docker-compose python3-attr python3-docker python3-dockerpty python3-docopt python3-dotenv python3-jsonschema python3-pyrsistent python3-texttable python3-websocket
    0 upgraded, 10 newly installed, 0 to remove and 5 not upgraded.
    Need to get 432 kB of archives.
    After this operation, 2,277 kB of additional disk space will be used.
    Do you want to continue? [Y/n] y
    Get:1 http://ae.archive.ubuntu.com/ubuntu jammy/universe amd64 python3-websocket all 1.2.3-1 [34.7 kB]
    Get:2 http://ae.archive.ubuntu.com/ubuntu jammy/universe amd64 python3-docker all 5.0.3-1 [89.3 kB]
    Get:3 http://ae.archive.ubuntu.com/ubuntu jammy/universe amd64 python3-dockerpty all 0.4.1-2 [11.1 kB]
    Get:4 http://ae.archive.ubuntu.com/ubuntu jammy/universe amd64 python3-docopt all 0.6.2-4 [26.9 kB]
    Get:5 http://ae.archive.ubuntu.com/ubuntu jammy/universe amd64 python3-dotenv all 0.19.2-1 [20.5 kB]
    Get:6 http://ae.archive.ubuntu.com/ubuntu jammy/main amd64 python3-attr all 21.2.0-1 [44.0 kB]
    Get:7 http://ae.archive.ubuntu.com/ubuntu jammy/main amd64 python3-pyrsistent amd64 0.18.1-1build1 [55.5 kB]                                                            
    Get:8 http://ae.archive.ubuntu.com/ubuntu jammy/main amd64 python3-jsonschema all 3.2.0-0ubuntu2 [43.1 kB]                                                              
    Get:9 http://ae.archive.ubuntu.com/ubuntu jammy/universe amd64 python3-texttable all 1.6.4-1 [11.4 kB]                                                                  
    Get:10 http://ae.archive.ubuntu.com/ubuntu jammy/universe amd64 docker-compose all 1.29.2-1 [95.8 kB]                                                                   
    Fetched 432 kB in 15s (28.1 kB/s)                                                                                                                                       
    Selecting previously unselected package python3-websocket.
    (Reading database ... 239926 files and directories currently installed.)
    Preparing to unpack .../0-python3-websocket_1.2.3-1_all.deb ...
    Unpacking python3-websocket (1.2.3-1) ...
    Selecting previously unselected package python3-docker.
    Preparing to unpack .../1-python3-docker_5.0.3-1_all.deb ...
    Unpacking python3-docker (5.0.3-1) ...
    Selecting previously unselected package python3-dockerpty.
    Preparing to unpack .../2-python3-dockerpty_0.4.1-2_all.deb ...
    Unpacking python3-dockerpty (0.4.1-2) ...
    Selecting previously unselected package python3-docopt.
    Preparing to unpack .../3-python3-docopt_0.6.2-4_all.deb ...
    Unpacking python3-docopt (0.6.2-4) ...
    Selecting previously unselected package python3-dotenv.
    Preparing to unpack .../4-python3-dotenv_0.19.2-1_all.deb ...
    Unpacking python3-dotenv (0.19.2-1) ...
    Selecting previously unselected package python3-attr.
    Preparing to unpack .../5-python3-attr_21.2.0-1_all.deb ...
    Unpacking python3-attr (21.2.0-1) ...
    Selecting previously unselected package python3-pyrsistent:amd64.
    Preparing to unpack .../6-python3-pyrsistent_0.18.1-1build1_amd64.deb ...
    Unpacking python3-pyrsistent:amd64 (0.18.1-1build1) ...
    Selecting previously unselected package python3-jsonschema.
    Preparing to unpack .../7-python3-jsonschema_3.2.0-0ubuntu2_all.deb ...
    Unpacking python3-jsonschema (3.2.0-0ubuntu2) ...
    Selecting previously unselected package python3-texttable.
    Preparing to unpack .../8-python3-texttable_1.6.4-1_all.deb ...
    Unpacking python3-texttable (1.6.4-1) ...
    Selecting previously unselected package docker-compose.
    Preparing to unpack .../9-docker-compose_1.29.2-1_all.deb ...
    Unpacking docker-compose (1.29.2-1) ...
    Setting up python3-dotenv (0.19.2-1) ...
    Setting up python3-attr (21.2.0-1) ...
    Setting up python3-texttable (1.6.4-1) ...
    Setting up python3-docopt (0.6.2-4) ...
    Setting up python3-pyrsistent:amd64 (0.18.1-1build1) ...
    Setting up python3-websocket (1.2.3-1) ...
    Setting up python3-dockerpty (0.4.1-2) ...
    Setting up python3-docker (5.0.3-1) ...
    Setting up python3-jsonschema (3.2.0-0ubuntu2) ...
    Setting up docker-compose (1.29.2-1) ...
    Processing triggers for man-db (2.10.2-1) ...
================================================
16- write in Terminal
docker-compose up --build

Output should be like this:
    [+] Building 1.0s (3/3) FINISHED                                                                                        docker:rootless
    => [web internal] load build definition from Dockerfile                                                                           0.1s
    => => transferring dockerfile: 204B                                                                                               0.0s
    => [web internal] load .dockerignore                                                                                              0.1s
    => => transferring context: 2B                                                                                                    0.0s
    => ERROR [web internal] load metadata for docker.io/library/python:3.9                                                            0.8s
    ------
    > [web internal] load metadata for docker.io/library/python:3.9:
    ------
    failed to solve: python:3.9: pulling from host registry-1.docker.io failed with status code [manifests 3.9]: 403 Forbidden
================================================
17- Run strong VPN and write again in Terminal 
docker-compose up --build

Output should be like this:
    Building web
    [+] Building 1.5s (10/10) FINISHED                                                                                                                       docker:rootless
    => [internal] load .dockerignore                                                                                                                                   0.0s
    => => transferring context: 2B                                                                                                                                     0.0s
    => [internal] load build definition from Dockerfile                                                                                                                0.0s
    => => transferring dockerfile: 204B                                                                                                                                0.0s
    => [internal] load metadata for docker.io/library/python:3.9                                                                                                       1.3s
    => [1/5] FROM docker.io/library/python:3.9@sha256:30678bb79d9eeaf98ec0ce83cdcd4d6f5301484ef86873a711e69df2ca77e8ac                                                 0.0s
    => [internal] load build context                                                                                                                                   0.0s
    => => transferring context: 2.54kB                                                                                                                                 0.0s
    => CACHED [2/5] WORKDIR /code                                                                                                                                      0.0s
    => CACHED [3/5] COPY requirements.txt /code/                                                                                                                       0.0s
    => CACHED [4/5] RUN pip install -r requirements.txt                                                                                                                0.0s
    => CACHED [5/5] COPY . /code/                                                                                                                                      0.0s
    => exporting to image                                                                                                                                              0.0s
    => => exporting layers                                                                                                                                             0.0s
    => => writing image sha256:5dafce66a2d000f0f44a03ecd1aa8c7acdab8fb951b41324a98333877fe8e93b                                                                        0.0s
    => => naming to docker.io/library/django_docker_with_postgresql_web                                                                                                0.0s
    Creating django_docker_with_postgresql_db_1 ... done
    Creating django_docker_with_postgresql_web_1 ... done
    Attaching to django_docker_with_postgresql_db_1, django_docker_with_postgresql_web_1
    db_1   | ********************************************************************************
    db_1   | WARNING: POSTGRES_HOST_AUTH_METHOD has been set to "trust". This will allow
    db_1   |          anyone with access to the Postgres port to access your database without
    db_1   |          a password, even if POSTGRES_PASSWORD is set. See PostgreSQL
    db_1   |          documentation about "trust":
    db_1   |          https://www.postgresql.org/docs/current/auth-trust.html
    db_1   |          In Docker's default configuration, this is effectively any other
    db_1   |          container on the same system.
    db_1   | 
    db_1   |          It is not recommended to use POSTGRES_HOST_AUTH_METHOD=trust. Replace
    db_1   |          it with "-e POSTGRES_PASSWORD=password" instead to set a password in
    db_1   |          "docker run".
    db_1   | ********************************************************************************
    db_1   | The files belonging to this database system will be owned by user "postgres".
    db_1   | This user must also own the server process.
    db_1   | 
    db_1   | The database cluster will be initialized with locale "en_US.utf8".
    db_1   | The default database encoding has accordingly been set to "UTF8".
    db_1   | The default text search configuration will be set to "english".
    db_1   | 
    db_1   | Data page checksums are disabled.
    db_1   | 
    db_1   | fixing permissions on existing directory /var/lib/postgresql/data ... ok
    db_1   | creating subdirectories ... ok
    db_1   | selecting dynamic shared memory implementation ... posix
    db_1   | selecting default max_connections ... 100
    db_1   | selecting default shared_buffers ... 128MB
    db_1   | selecting default time zone ... Etc/UTC
    db_1   | creating configuration files ... ok
    db_1   | running bootstrap script ... ok
    db_1   | performing post-bootstrap initialization ... ok
    web_1  | Watching for file changes with StatReloader
    web_1  | Performing system checks...
    web_1  | 
    web_1  | System check identified no issues (0 silenced).
    web_1  | Exception in thread django-main-thread:
    web_1  | Traceback (most recent call last):
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    web_1  |     self.connect()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 211, in connect
    web_1  |     self.connection = self.get_new_connection(conn_params)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/postgresql/base.py", line 199, in get_new_connection
    web_1  |     connection = Database.connect(**conn_params)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/psycopg2/__init__.py", line 122, in connect
    web_1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    web_1  | psycopg2.OperationalError: connection to server at "db" (172.22.0.2), port 5432 failed: Connection refused
    web_1  |        Is the server running on that host and accepting TCP/IP connections?
    web_1  | 
    web_1  | 
    web_1  | The above exception was the direct cause of the following exception:
    web_1  | 
    web_1  | Traceback (most recent call last):
    web_1  |   File "/usr/local/lib/python3.9/threading.py", line 980, in _bootstrap_inner
    web_1  |     self.run()
    web_1  |   File "/usr/local/lib/python3.9/threading.py", line 917, in run
    web_1  |     self._target(*self._args, **self._kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/autoreload.py", line 64, in wrapper
    web_1  |     fn(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/core/management/commands/runserver.py", line 127, in inner_run
    web_1  |     self.check_migrations()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/core/management/base.py", line 505, in check_migrations
    web_1  |     executor = MigrationExecutor(connections[DEFAULT_DB_ALIAS])
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/executor.py", line 18, in __init__
    web_1  |     self.loader = MigrationLoader(self.connection)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/loader.py", line 53, in __init__
    web_1  |     self.build_graph()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/loader.py", line 223, in build_graph
    web_1  |     self.applied_migrations = recorder.applied_migrations()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/recorder.py", line 77, in applied_migrations
    web_1  |     if self.has_table():
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/recorder.py", line 55, in has_table
    web_1  |     with self.connection.cursor() as cursor:
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 270, in cursor
    web_1  |     return self._cursor()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 246, in _cursor
    web_1  |     self.ensure_connection()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    web_1  |     self.connect()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/utils.py", line 90, in __exit__
    web_1  |     raise dj_exc_value.with_traceback(traceback) from exc_value
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    web_1  |     self.connect()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 211, in connect
    web_1  |     self.connection = self.get_new_connection(conn_params)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/postgresql/base.py", line 199, in get_new_connection
    web_1  |     connection = Database.connect(**conn_params)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/psycopg2/__init__.py", line 122, in connect
    web_1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    web_1  | django.db.utils.OperationalError: connection to server at "db" (172.22.0.2), port 5432 failed: Connection refused
    web_1  |        Is the server running on that host and accepting TCP/IP connections?
    web_1  | 
    db_1   | syncing data to disk ... initdb: warning: enabling "trust" authentication for local connections
    db_1   | You can change this by editing pg_hba.conf or using the option -A, or
    db_1   | --auth-local and --auth-host, the next time you run initdb.
    db_1   | ok
    db_1   | 
    db_1   | 
    db_1   | Success. You can now start the database server using:
    db_1   | 
    db_1   |     pg_ctl -D /var/lib/postgresql/data -l logfile start
    db_1   | 
    db_1   | waiting for server to start....2023-12-30 14:33:45.984 UTC [49] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-30 14:33:45.990 UTC [49] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-30 14:33:46.009 UTC [50] LOG:  database system was shut down at 2023-12-30 14:33:44 UTC
    db_1   | 2023-12-30 14:33:46.019 UTC [49] LOG:  database system is ready to accept connections
    db_1   |  done
    db_1   | server started
    db_1   | 
    db_1   | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
    db_1   | 
    db_1   | 2023-12-30 14:33:46.090 UTC [49] LOG:  received fast shutdown request
    db_1   | waiting for server to shut down....2023-12-30 14:33:46.096 UTC [49] LOG:  aborting any active transactions
    db_1   | 2023-12-30 14:33:46.098 UTC [49] LOG:  background worker "logical replication launcher" (PID 56) exited with exit code 1
    db_1   | 2023-12-30 14:33:46.098 UTC [51] LOG:  shutting down
    db_1   | 2023-12-30 14:33:46.141 UTC [49] LOG:  database system is shut down
    db_1   |  done
    db_1   | server stopped
    db_1   | 
    db_1   | PostgreSQL init process complete; ready for start up.
    db_1   | 
    db_1   | 2023-12-30 14:33:46.220 UTC [1] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-30 14:33:46.220 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
    db_1   | 2023-12-30 14:33:46.220 UTC [1] LOG:  listening on IPv6 address "::", port 5432
    db_1   | 2023-12-30 14:33:46.231 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-30 14:33:46.245 UTC [62] LOG:  database system was shut down at 2023-12-30 14:33:46 UTC
    db_1   | 2023-12-30 14:33:46.255 UTC [1] LOG:  database system is ready to accept connections
================================================
18- write Ctrl + C key and shut it down
Ctrl + C key

Output should be like this:
    ^CGracefully stopping... (press Ctrl+C again to force)
    Stopping django_docker_with_postgresql_web_1 ... done
    Stopping django_docker_with_postgresql_db_1  ... done
================================================
19- Run again (strong VPN activated)
docker-compose up --build

Output should be like this:
    docker-compose up --build
    Building web
    [+] Building 5.5s (11/11) FINISHED                                                                                                                       docker:rootless
    => [internal] load .dockerignore                                                                                                                                   0.0s
    => => transferring context: 2B                                                                                                                                     0.0s
    => [internal] load build definition from Dockerfile                                                                                                                0.0s
    => => transferring dockerfile: 204B                                                                                                                                0.0s
    => [internal] load metadata for docker.io/library/python:3.9                                                                                                       5.2s
    => [auth] library/python:pull token for registry-1.docker.io                                                                                                       0.0s
    => [internal] load build context                                                                                                                                   0.0s
    => => transferring context: 2.54kB                                                                                                                                 0.0s
    => [1/5] FROM docker.io/library/python:3.9@sha256:30678bb79d9eeaf98ec0ce83cdcd4d6f5301484ef86873a711e69df2ca77e8ac                                                 0.0s
    => CACHED [2/5] WORKDIR /code                                                                                                                                      0.0s
    => CACHED [3/5] COPY requirements.txt /code/                                                                                                                       0.0s
    => CACHED [4/5] RUN pip install -r requirements.txt                                                                                                                0.0s
    => CACHED [5/5] COPY . /code/                                                                                                                                      0.0s
    => exporting to image                                                                                                                                              0.0s
    => => exporting layers                                                                                                                                             0.0s
    => => writing image sha256:5dafce66a2d000f0f44a03ecd1aa8c7acdab8fb951b41324a98333877fe8e93b                                                                        0.0s
    => => naming to docker.io/library/django_docker_with_postgresql_web                                                                                                0.0s
    django_docker_with_postgresql_db_1 is up-to-date
    django_docker_with_postgresql_web_1 is up-to-date
    Attaching to django_docker_with_postgresql_db_1, django_docker_with_postgresql_web_1
    db_1   | ********************************************************************************
    db_1   | WARNING: POSTGRES_HOST_AUTH_METHOD has been set to "trust". This will allow
    db_1   |          anyone with access to the Postgres port to access your database without
    db_1   |          a password, even if POSTGRES_PASSWORD is set. See PostgreSQL
    db_1   |          documentation about "trust":
    db_1   |          https://www.postgresql.org/docs/current/auth-trust.html
    db_1   |          In Docker's default configuration, this is effectively any other
    db_1   |          container on the same system.
    db_1   | 
    db_1   |          It is not recommended to use POSTGRES_HOST_AUTH_METHOD=trust. Replace
    db_1   |          it with "-e POSTGRES_PASSWORD=password" instead to set a password in
    db_1   |          "docker run".
    db_1   | ********************************************************************************
    db_1   | The files belonging to this database system will be owned by user "postgres".
    db_1   | This user must also own the server process.
    db_1   | 
    db_1   | The database cluster will be initialized with locale "en_US.utf8".
    db_1   | The default database encoding has accordingly been set to "UTF8".
    db_1   | The default text search configuration will be set to "english".
    db_1   | 
    db_1   | Data page checksums are disabled.
    db_1   | 
    db_1   | fixing permissions on existing directory /var/lib/postgresql/data ... ok
    db_1   | creating subdirectories ... ok
    db_1   | selecting dynamic shared memory implementation ... posix
    db_1   | selecting default max_connections ... 100
    db_1   | selecting default shared_buffers ... 128MB
    db_1   | selecting default time zone ... Etc/UTC
    db_1   | creating configuration files ... ok
    db_1   | running bootstrap script ... ok
    db_1   | performing post-bootstrap initialization ... ok
    db_1   | syncing data to disk ... ok
    db_1   | 
    db_1   | 
    db_1   | Success. You can now start the database server using:
    db_1   | 
    db_1   |     pg_ctl -D /var/lib/postgresql/data -l logfile start
    db_1   | initdb: warning: enabling "trust" authentication for local connections
    db_1   | You can change this by editing pg_hba.conf or using the option -A, or
    db_1   | --auth-local and --auth-host, the next time you run initdb.
    db_1   | 
    db_1   | waiting for server to start....2023-12-30 14:23:49.922 UTC [49] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-30 14:23:49.928 UTC [49] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-30 14:23:49.946 UTC [50] LOG:  database system was shut down at 2023-12-30 14:23:48 UTC
    db_1   | 2023-12-30 14:23:49.956 UTC [49] LOG:  database system is ready to accept connections
    db_1   |  done
    db_1   | server started
    db_1   | 
    db_1   | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
    db_1   | 
    db_1   | 2023-12-30 14:23:50.025 UTC [49] LOG:  received fast shutdown request
    db_1   | waiting for server to shut down....2023-12-30 14:23:50.032 UTC [49] LOG:  aborting any active transactions
    db_1   | 2023-12-30 14:23:50.034 UTC [49] LOG:  background worker "logical replication launcher" (PID 56) exited with exit code 1
    db_1   | 2023-12-30 14:23:50.034 UTC [51] LOG:  shutting down
    db_1   | 2023-12-30 14:23:50.077 UTC [49] LOG:  database system is shut down
    db_1   |  done
    db_1   | server stopped
    db_1   | 
    db_1   | PostgreSQL init process complete; ready for start up.
    db_1   | 
    db_1   | 2023-12-30 14:23:50.162 UTC [1] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-30 14:23:50.162 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
    db_1   | 2023-12-30 14:23:50.162 UTC [1] LOG:  listening on IPv6 address "::", port 5432
    db_1   | 2023-12-30 14:23:50.173 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-30 14:23:50.187 UTC [62] LOG:  database system was shut down at 2023-12-30 14:23:50 UTC
    db_1   | 2023-12-30 14:23:50.197 UTC [1] LOG:  database system is ready to accept connections
    db_1   | 2023-12-30 14:28:14.751 UTC [1] LOG:  received fast shutdown request
    db_1   | 2023-12-30 14:28:14.758 UTC [1] LOG:  aborting any active transactions
    db_1   | 2023-12-30 14:28:14.762 UTC [1] LOG:  background worker "logical replication launcher" (PID 68) exited with exit code 1
    db_1   | 2023-12-30 14:28:14.764 UTC [63] LOG:  shutting down
    db_1   | 2023-12-30 14:28:14.818 UTC [1] LOG:  database system is shut down
    db_1   | 
    db_1   | PostgreSQL Database directory appears to contain a database; Skipping initialization
    db_1   | 
    db_1   | 2023-12-30 14:29:00.299 UTC [1] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-30 14:29:00.299 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
    db_1   | 2023-12-30 14:29:00.299 UTC [1] LOG:  listening on IPv6 address "::", port 5432
    db_1   | 2023-12-30 14:29:00.317 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-30 14:29:00.330 UTC [27] LOG:  database system was shut down at 2023-12-30 14:28:14 UTC
    db_1   | 2023-12-30 14:29:00.339 UTC [1] LOG:  database system is ready to accept connections
    web_1  | Watching for file changes with StatReloader
    web_1  | Performing system checks...
    web_1  | 
    web_1  | System check identified no issues (0 silenced).
    web_1  | Exception in thread django-main-thread:
    web_1  | Traceback (most recent call last):
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    web_1  |     self.connect()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 211, in connect
    web_1  |     self.connection = self.get_new_connection(conn_params)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/postgresql/base.py", line 199, in get_new_connection
    web_1  |     connection = Database.connect(**conn_params)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/psycopg2/__init__.py", line 122, in connect
    web_1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    web_1  | psycopg2.OperationalError: connection to server at "db" (172.22.0.2), port 5432 failed: Connection refused
    web_1  |        Is the server running on that host and accepting TCP/IP connections?
    web_1  | 
    web_1  | 
    web_1  | The above exception was the direct cause of the following exception:
    web_1  | 
    web_1  | Traceback (most recent call last):
    web_1  |   File "/usr/local/lib/python3.9/threading.py", line 980, in _bootstrap_inner
    web_1  |     self.run()
    web_1  |   File "/usr/local/lib/python3.9/threading.py", line 917, in run
    web_1  |     self._target(*self._args, **self._kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/autoreload.py", line 64, in wrapper
    web_1  |     fn(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/core/management/commands/runserver.py", line 127, in inner_run
    web_1  |     self.check_migrations()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/core/management/base.py", line 505, in check_migrations
    web_1  |     executor = MigrationExecutor(connections[DEFAULT_DB_ALIAS])
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/executor.py", line 18, in __init__
    web_1  |     self.loader = MigrationLoader(self.connection)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/loader.py", line 53, in __init__
    web_1  |     self.build_graph()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/loader.py", line 223, in build_graph
    web_1  |     self.applied_migrations = recorder.applied_migrations()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/recorder.py", line 77, in applied_migrations
    web_1  |     if self.has_table():
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/migrations/recorder.py", line 55, in has_table
    web_1  |     with self.connection.cursor() as cursor:
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 270, in cursor
    web_1  |     return self._cursor()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 246, in _cursor
    web_1  |     self.ensure_connection()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    web_1  |     self.connect()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/utils.py", line 90, in __exit__
    web_1  |     raise dj_exc_value.with_traceback(traceback) from exc_value
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 230, in ensure_connection
    web_1  |     self.connect()
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/base/base.py", line 211, in connect
    web_1  |     self.connection = self.get_new_connection(conn_params)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/utils/asyncio.py", line 25, in inner
    web_1  |     return func(*args, **kwargs)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/django/db/backends/postgresql/base.py", line 199, in get_new_connection
    web_1  |     connection = Database.connect(**conn_params)
    web_1  |   File "/usr/local/lib/python3.9/site-packages/psycopg2/__init__.py", line 122, in connect
    web_1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
    web_1  | django.db.utils.OperationalError: connection to server at "db" (172.22.0.2), port 5432 failed: Connection refused
    web_1  |        Is the server running on that host and accepting TCP/IP connections?
    web_1  | 
    web_1  | Watching for file changes with StatReloader
    web_1  | Performing system checks...
    web_1  | 
    web_1  | System check identified no issues (0 silenced).
    web_1  | 
    web_1  | You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.
    web_1  | Run 'python manage.py migrate' to apply them.
    web_1  | December 30, 2023 - 14:29:01
    web_1  | Django version 4.0.2, using settings 'config.settings'
    web_1  | Starting development server at http://0.0.0.0:8000/
    web_1  | Quit the server with CONTROL-C.
    web_1  | [30/Dec/2023 14:29:32] "GET / HTTP/1.1" 200 10697
    web_1  | [30/Dec/2023 14:29:32] "GET /static/admin/css/fonts.css HTTP/1.1" 200 423
    web_1  | [30/Dec/2023 14:29:32] "GET /static/admin/fonts/Roboto-Bold-webfont.woff HTTP/1.1" 200 86184
    web_1  | [30/Dec/2023 14:29:32] "GET /static/admin/fonts/Roboto-Regular-webfont.woff HTTP/1.1" 200 85876
    web_1  | [30/Dec/2023 14:29:32] "GET /static/admin/fonts/Roboto-Light-webfont.woff HTTP/1.1" 200 85692
================================================
================================================
ERROR: failed: port is already allocated
How to fix?
1- Write in Terminal 
lsof -i :8000
2- Write in Terminal
kill <PID>
================================================
================================================
20- Check in browser should see default django page
================================================
💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠
BEFORE migrate
💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠💠
Container

21- in Terminal
docker-compose exec web python manage.py startapp accounts 

Output should be like this:
A directory created with basic python and more files
================================================
22- add accounts in config/settings.py > INSTALLED_APPS list
'accounts',
================================================
23-first docker rm containers and second rmi image
docker rm conainter-name
docker rmi image-name
================================================
24- create fake venv, write in Terminal
python -m venv venv
================================================
25- Create .gitignore file and add this into it
venv/ 
================================================
26- import this into accounts/models.py
from django.contrib.auth.models import AbstractUser
================================================
27- create new class in accounts/models.py
class CustomUser(AbstractUser):
    pass
================================================
28- Create forms.py in accounts directory
forms.py
================================================
29- import this in accounts/forms.py
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth.forms import UserChangeForm
from django.contrib.auth import get_user_model
================================================
30- Create new class in accounts/forms.py
class CustomUserCreationForm(UserCreationForm):
    class Meta:
        model = get_user_model()
        fields = ('email', 'username',  )
================================================
31- add this in config/settings.py
# accounts config
AUTH_USER_MODEL =  'accounts.CustomUser'
================================================
32- Create new class in accounts/forms.py
class CustomUserChangeForm(UserChangeForm):
    class Meta:
        model = get_user_model()
        fields = ('email', 'username',  )
================================================
33- import this into accounts/admin.py
from django.contrib.auth.admin import UserAdmin
from .models import CustomUser
from .forms import CustomUserCreationForm
from .forms import CustomUserChangeForm
================================================
34- create new class in accounts/admin.py
class CustomUserAdmin(UserAdmin):
    model = CustomUser
    add_form = CustomUserCreationForm
    form = CustomUserChangeForm
    list_display = ('email', 'username',  )
================================================
35- in Terminal 
docker-compose exec web python manage.py makemigrations

Output should be like this:
    Migrations for 'accounts':
      accounts/migrations/0001_initial.py
        - Create model CustomUser
================================================
36- in Terminal 
docker-compose exec web python manage.py migrate

Output should be like this:
    Operations to perform:
      Apply all migrations: accounts, admin, auth, contenttypes, sessions
    Running migrations:
      Applying contenttypes.0001_initial... OK
      Applying contenttypes.0002_remove_content_type_name... OK
      Applying auth.0001_initial... OK
      Applying auth.0002_alter_permission_name_max_length... OK
      Applying auth.0003_alter_user_email_max_length... OK
      Applying auth.0004_alter_user_username_opts... OK
      Applying auth.0005_alter_user_last_login_null... OK
      Applying auth.0006_require_contenttypes_0002... OK
      Applying auth.0007_alter_validators_add_error_messages... OK
      Applying auth.0008_alter_user_username_max_length... OK
      Applying auth.0009_alter_user_last_name_max_length... OK
      Applying auth.0010_alter_group_name_max_length... OK
      Applying auth.0011_update_proxy_permissions... OK
      Applying auth.0012_alter_user_first_name_max_length... OK
      Applying accounts.0001_initial... OK
      Applying admin.0001_initial... OK
      Applying admin.0002_logentry_remove_auto_add... OK
      Applying admin.0003_logentry_add_action_flag_choices... OK
      Applying sessions.0001_initial... OK
================================================
37- in Terminal
docker-compose exec web python manage.py createsuperuser

Output should be like this:
    Username:
    Email address: 
    Password: 
    Password (again): 
    This password is too short. It must contain at least 8 characters.
    This password is too common.
    This password is entirely numeric.
    Bypass password validation and create user anyway? [y/N]: y
    Superuser created successfully.
================================================
38- in Terminal
docker-compose up --build

Output should be like this:
    Building web
    [+] Building 4.3s (11/11) FINISHED                                                                                         docker:rootless
    => [internal] load build definition from Dockerfile                                                                                  0.0s
    => => transferring dockerfile: 204B                                                                                                  0.0s
    => [internal] load .dockerignore                                                                                                     0.0s
    => => transferring context: 2B                                                                                                       0.0s
    => [internal] load metadata for docker.io/library/python:3.9                                                                         2.3s
    => [auth] library/python:pull token for registry-1.docker.io                                                                         0.0s
    => [1/5] FROM docker.io/library/python:3.9@sha256:30678bb79d9eeaf98ec0ce83cdcd4d6f5301484ef86873a711e69df2ca77e8ac                   0.0s
    => [internal] load build context                                                                                                     0.1s
    => => transferring context: 154.49kB                                                                                                 0.1s
    => CACHED [2/5] WORKDIR /code                                                                                                        0.0s
    => CACHED [3/5] COPY requirements.txt /code/                                                                                         0.0s
    => CACHED [4/5] RUN pip install -r requirements.txt                                                                                  0.0s
    => [5/5] COPY . /code/                                                                                                               0.3s
    => exporting to image                                                                                                                1.3s
    => => exporting layers                                                                                                               1.3s
    => => writing image sha256:76e021917596aa39243cc3e195139b8caa3fcdf238ca8c203b98b667be63b7a4                                          0.0s
    => => naming to docker.io/library/2_django_haji_web                                                                                  0.0s
    Recreating 2_django_haji_web_1 ... 
    Recreating 2_django_haji_web_1 ... done
    Attaching to 2_django_haji_db_1, 2_django_haji_web_1
    db_1   | ********************************************************************************
    db_1   | WARNING: POSTGRES_HOST_AUTH_METHOD has been set to "trust". This will allow
    db_1   |          anyone with access to the Postgres port to access your database without
    db_1   |          a password, even if POSTGRES_PASSWORD is set. See PostgreSQL
    db_1   |          documentation about "trust":
    db_1   |          https://www.postgresql.org/docs/current/auth-trust.html
    db_1   |          In Docker's default configuration, this is effectively any other
    db_1   |          container on the same system.
    db_1   | 
    db_1   |          It is not recommended to use POSTGRES_HOST_AUTH_METHOD=trust. Replace
    db_1   |          it with "-e POSTGRES_PASSWORD=password" instead to set a password in
    db_1   |          "docker run".
    db_1   | ********************************************************************************
    db_1   | The files belonging to this database system will be owned by user "postgres".
    db_1   | This user must also own the server process.
    db_1   | 
    db_1   | The database cluster will be initialized with locale "en_US.utf8".
    db_1   | The default database encoding has accordingly been set to "UTF8".
    db_1   | The default text search configuration will be set to "english".
    db_1   | 
    db_1   | Data page checksums are disabled.
    db_1   | 
    db_1   | fixing permissions on existing directory /var/lib/postgresql/data ... ok
    db_1   | creating subdirectories ... ok
    db_1   | selecting dynamic shared memory implementation ... posix
    db_1   | selecting default max_connections ... 100
    db_1   | selecting default shared_buffers ... 128MB
    db_1   | selecting default time zone ... Etc/UTC
    db_1   | creating configuration files ... ok
    db_1   | running bootstrap script ... ok
    db_1   | performing post-bootstrap initialization ... ok
    db_1   | syncing data to disk ... ok
    db_1   | 
    db_1   | initdb: warning: enabling "trust" authentication for local connections
    db_1   | You can change this by editing pg_hba.conf or using the option -A, or
    db_1   | --auth-local and --auth-host, the next time you run initdb.
    db_1   | 
    db_1   | Success. You can now start the database server using:
    db_1   | 
    db_1   |     pg_ctl -D /var/lib/postgresql/data -l logfile start
    db_1   | 
    db_1   | waiting for server to start....2023-12-31 06:55:35.535 UTC [49] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-31 06:55:35.549 UTC [49] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-31 06:55:35.567 UTC [50] LOG:  database system was shut down at 2023-12-31 06:55:33 UTC
    db_1   | 2023-12-31 06:55:35.577 UTC [49] LOG:  database system is ready to accept connections
    db_1   |  done
    db_1   | server started
    db_1   | 
    db_1   | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
    db_1   | 
    db_1   | waiting for server to shut down....2023-12-31 06:55:35.660 UTC [49] LOG:  received fast shutdown request
    db_1   | 2023-12-31 06:55:35.666 UTC [49] LOG:  aborting any active transactions
    db_1   | 2023-12-31 06:55:35.668 UTC [49] LOG:  background worker "logical replication launcher" (PID 56) exited with exit code 1
    db_1   | 2023-12-31 06:55:35.668 UTC [51] LOG:  shutting down
    db_1   | 2023-12-31 06:55:35.715 UTC [49] LOG:  database system is shut down
    db_1   |  done
    db_1   | server stopped
    db_1   | 
    db_1   | PostgreSQL init process complete; ready for start up.
    db_1   | 
    db_1   | 2023-12-31 06:55:35.796 UTC [1] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-31 06:55:35.796 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
    db_1   | 2023-12-31 06:55:35.796 UTC [1] LOG:  listening on IPv6 address "::", port 5432
    db_1   | 2023-12-31 06:55:35.807 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-31 06:55:35.820 UTC [62] LOG:  database system was shut down at 2023-12-31 06:55:35 UTC
    db_1   | 2023-12-31 06:55:35.830 UTC [1] LOG:  database system is ready to accept connections
    db_1   | 2023-12-31 06:55:36.417 UTC [1] LOG:  received fast shutdown request
    db_1   | 2023-12-31 06:55:36.423 UTC [1] LOG:  aborting any active transactions
    db_1   | 2023-12-31 06:55:36.425 UTC [1] LOG:  background worker "logical replication launcher" (PID 68) exited with exit code 1
    db_1   | 2023-12-31 06:55:36.425 UTC [63] LOG:  shutting down
    db_1   | 2023-12-31 06:55:36.469 UTC [1] LOG:  database system is shut down
    db_1   | 
    db_1   | PostgreSQL Database directory appears to contain a database; Skipping initialization
    db_1   | 
    db_1   | 2023-12-31 06:55:50.233 UTC [1] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-31 06:55:50.233 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
    db_1   | 2023-12-31 06:55:50.233 UTC [1] LOG:  listening on IPv6 address "::", port 5432
    db_1   | 2023-12-31 06:55:50.244 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-31 06:55:50.257 UTC [27] LOG:  database system was shut down at 2023-12-31 06:55:36 UTC
    db_1   | 2023-12-31 06:55:50.266 UTC [1] LOG:  database system is ready to accept connections
    web_1  | Watching for file changes with StatReloader
    web_1  | Performing system checks...
    web_1  | 
    web_1  | System check identified no issues (0 silenced).
    web_1  | December 31, 2023 - 07:00:47
    web_1  | Django version 4.0.2, using settings 'config.settings'
    web_1  | Starting development server at http://0.0.0.0:8000/
    web_1  | Quit the server with CONTROL-C.
================================================
     💠💠💠 For All Projects 💠💠💠
    1- in Terminal
    docker-compose up --build
    ================================================
    2- in Terminal
    Ctrl + C key
    ================================================
    3- in Terminal
    docker start 2_django_haji_web_1 2_django_haji_db_1 
    OR
    docker start web_Name dataBase_Name
    ================================================
    4- in Terminal 
    docker-compose exec web python manage.py makemigrations
    ================================================
    5- in Terminal 
    docker-compose exec web python manage.py migrate
    ================================================
    6- in Terminal 
    docker-compose up --build
    ================================================
    7- in another Terminal 
    docker-compose exec web python manage.py createsuperuser
    ================================================
    8- in browser 
    http://127.0.0.1:8000/admin/login/?next=/admin/

    Output, it must be implemented correctly
================================================
39- in Terminal
docker-compose exec web python manage.py startapp pages

Output should be like this:
A directory created with basic python and more files
================================================
40- add pages in config/settings.py > INSTALLED_APPS list
'pages',
================================================
41- import this into pages/views.py
from django.views.generic import TemplateView
================================================
42- create new two classes into pages/views.py
class HomePageView(TemplateView):
    template_name = 'home.html'

class AboutUsPageView(TemplateView):
    template_name = 'pages/aboutus.html'
================================================
43- Create tempaltes/home.html in current directory of project
tempaltes/home.html
================================================
44- write in tempaltes/home.html
Home Page is Here Dear Sina :)
================================================
45- write this in config/settings.py TEMPLATES list
'DIRS': [str(BASE_DIR.joinpath('templates'))],
================================================
46- Rebuild Server
docker-compose up --build

Output should be like this:
    Building web
    [+] Building 4.4s (11/11) FINISHED                                                                                 docker:rootless
     => [internal] load .dockerignore                                                                                             0.0s
     => => transferring context: 2B                                                                                               0.0s
     => [internal] load build definition from Dockerfile                                                                          0.0s
     => => transferring dockerfile: 204B                                                                                          0.0s
     => [internal] load metadata for docker.io/library/python:3.9                                                                 2.4s
     => [auth] library/python:pull token for registry-1.docker.io                                                                 0.0s
     => [1/5] FROM docker.io/library/python:3.9@sha256:30678bb79d9eeaf98ec0ce83cdcd4d6f5301484ef86873a711e69df2ca77e8ac           0.0s
     => [internal] load build context                                                                                             0.1s
     => => transferring context: 157.96kB                                                                                         0.1s
     => CACHED [2/5] WORKDIR /code                                                                                                0.0s
     => CACHED [3/5] COPY requirements.txt /code/                                                                                 0.0s
     => CACHED [4/5] RUN pip install -r requirements.txt                                                                          0.0s
     => [5/5] COPY . /code/                                                                                                       0.3s
     => exporting to image                                                                                                        1.3s
     => => exporting layers                                                                                                       1.3s
     => => writing image sha256:a6e2f9d799b76c35d6435cbb5e174b419b8538efa0d658cf69d7d15681ec4c79                                  0.0s
     => => naming to docker.io/library/2_django_haji_web                                                                          0.0s
    Starting 2_django_haji_db_1    ... done
    Recreating 2_django_haji_web_1 ... done
    Attaching to 2_django_haji_db_1, 2_django_haji_web_1
    db_1   | 
    db_1   | PostgreSQL Database directory appears to contain a database; Skipping initialization
    db_1   | 
    db_1   | 2023-12-31 11:09:07.119 UTC [1] LOG:  starting PostgreSQL 14.10 (Debian 14.10-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
    db_1   | 2023-12-31 11:09:07.147 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
    db_1   | 2023-12-31 11:09:07.147 UTC [1] LOG:  listening on IPv6 address "::", port 5432
    db_1   | 2023-12-31 11:09:07.159 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
    db_1   | 2023-12-31 11:09:07.194 UTC [27] LOG:  database system was shut down at 2023-12-31 11:08:58 UTC
    db_1   | 2023-12-31 11:09:07.213 UTC [1] LOG:  database system is ready to accept connections
    web_1  | Watching for file changes with StatReloader
    web_1  | Performing system checks...
    web_1  | 
    web_1  | System check identified no issues (0 silenced).
    web_1  | December 31, 2023 - 11:09:08
    web_1  | Django version 4.0.2, using settings 'config.settings'
    web_1  | Starting development server at http://0.0.0.0:8000/
    web_1  | Quit the server with CONTROL-C.
================================================
47- Create tempaltes/pages/aboutus.html in pages directory
templates/pages/aboutus.html
================================================
48- Write in tempaltes/pages/aboutus.html
About Us Sina LalehBakhsh from Earth
================================================
49- import this in config/urls.py
from django.urls import include
================================================
50- write into config/urls.py > urlpatterns list
path('', include('pages.urls')),
================================================
51- Create urls.py in pages directory
urls.py
================================================
52- import in pages/urls.py
from django.urls import path

from . import views
================================================
53- Create urlpatterns list in pages/urls.py
urlpatterns = [
    path('', views.HomePageView.as_view(), name='home'),
    path('aboutus/', views.AboutUsPageView.as_view(), name='aboutus'),
]
================================================
54- Rebuild server in Terminal
Rebuild Server
docker-compose up --build

Output should be like this:
    Building web
    .
    .
    .
    web_1  | System check identified no issues (0 silenced).
    web_1  | December 31, 2023 - 11:09:08
    web_1  | Django version 4.0.2, using settings 'config.settings'
    web_1  | Starting development server at http://0.0.0.0:8000/
    web_1  | Quit the server with CONTROL-C.
================================================
55- Remove previous images maybe are like this IDs

55-1
docker images

Output should be like this:
    REPOSITORY                          TAG       IMAGE ID       CREATED         SIZE
    2_django_haji_web                   latest    5c8a9427d249   8 seconds ago   1.06GB
    <none>                              <none>    990ff81cd4cf   5 minutes ago   1.06GB
    <none>                              <none>    9skfff90sld9   8 minutes ago   1.06GB
    <none>                              <none>    jjgks003kdf9   15 minutes ago   1.06GB

55-2 
docker rmi 990ff81cd4cf 9skfff90sld9 jjgks003kdf9

Output should be like this:
    Deleted: sha256:990ff81cd4cf79bc8479d832e13b0efd2b6afa361a8b5a889f3390bcd7af11ec
    Deleted: sha256:asdfXXXskgoow02jmgklfkf9873b0efd2b6afa361a8b5a889f3390bdkjdfn325
    Deleted: sha256:937kdmvlfkf34989945jkdlkjsdf9873245lkjsdf08998342587lkdjgldld027
================================================
56- Check browser
http://127.0.0.1:8000/admin/

Output should be like this:
    It must be implemented correctly
================================================
57- write this in config/settings.py in urlpatterns list
path('accounts/', include('django.contrib.auth.urls')),
path('accounts/', include('accounts.urls')),
================================================
58- Create urls.py in accounts directory
urls.py
================================================
59- import into accounts/urls.py
from django.urls import path

from . import views
================================================
60- Create urlpatterns list in accounts/urls.py
urlpatterns = [
    path('signup/', views.SignUpView.as_view(), name='signup'),
]
================================================
61- import into accounts/views.py
from django.views.generic import CreateView
from django.urls import reverse_lazy

from .forms import CustomUserCreationForm
================================================
62- Create new class into accounts/views.py
class SignUpView(CreateView):
    form_class = CustomUserCreationForm
    template_name = 'registration/signup.html'
    success_url = reverse_lazy('login')
================================================
63- Create registration/login.html AND registration/signup.html in templates current directory project
Output should be like this:
    It must be implemented correctly
================================================
64- write these in templates/registration/signup.html
<form action="" method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <input type="submit" value="Signup">
</form>
================================================
65- write these in templates/registration/login.html
<form action="" method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <input type="submit" value="Login">
</form>
================================================
66- Rebuild Server  
🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋🐋 
When don't write --build in above command, 
after running that you don't need to check docker images for remove previous Images 

docker-compose up 

Output should be like this:
    Starting 2_django_haji_web_1 ... done
    Starting 2_django_haji_db_1  ... done
    db_1   | 2023-12-31 18:48:10.204 UTC [1] LOG:  database system is ready to accept connections
    .
    .
    web_1  | Django version 4.0.2, using settings 'config.settings'
    web_1  | Starting development server at http://0.0.0.0:8000/
    web_1  | Quit the server with CONTROL-C.
================================================
67- Check browser
http://127.0.0.1:8000/admin/

Output should be like this:
    It must be implemented correctly
================================================
68- Check this link 
http://127.0.0.1:8000/accounts/login/

and after loged in you should see this error:
Page not found (404)
================================================
69- Check this link 
http://127.0.0.1:8000/accounts/logout/

Output should be like this in browser:
    Django administration
    Home
    Logged out
    Thanks for spending some quality time with the web site today.
    Log in again
================================================
70- Check this link 
http://127.0.0.1:8000/accounts/signup/

Output should be like this:
    It must be implemented correctly
================================================
71- write this in config/settings.py
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'
================================================
72- make sure server is true running like this
...
web_1  | System check identified no issues (0 silenced).
web_1  | December 31, 2023 - 19:01:42
web_1  | Django version 4.0.2, using settings 'config.settings'
web_1  | Starting development server at http://0.0.0.0:8000/
web_1  | Quit the server with CONTROL-C.
================================================
73- Check these links should be redirected after login/logout
http://127.0.0.1:8000/accounts/login/
http://127.0.0.1:8000/accounts/logout/
================================================

🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑
You Can TEST erverithing in this step 
🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑🥑

================================================
74- in another Terminal (Server should be acticeted now)
docker-compose exec web pip install django-crispy-forms

If VPN be OFF
Output:
    WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=15)")': /simple/django-crispy-forms/
    WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=15)")': /simple/django-crispy-forms/

write Ctrl + C key:
Output:
    ^CERROR: Operation cancelled by user
    [notice] A new release of pip is available: 23.0.1 -> 23.3.2
    [notice] To update, run: pip install --upgrade pip

🎯🎯🎯🎯🎯🎯
Active VPN and write again, Be sure don't active venv like this below:
    sina@linux:~/01-Repo/2_Django_Haji$ docker-compose exec web pip install django-crispy-forms
    Collecting django-crispy-forms
      Downloading django_crispy_forms-2.1-py3-none-any.whl (31 kB)
    Collecting django>=4.2
      Downloading Django-4.2.8-py3-none-any.whl (8.0 MB)
         ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 8.0/8.0 MB 1.5 MB/s eta 0:00:00
    Collecting asgiref<4,>=3.6.0
      Downloading asgiref-3.7.2-py3-none-any.whl (24 kB)
    Requirement already satisfied: sqlparse>=0.3.1 in /usr/local/lib/python3.9/site-packages (from django>=4.2->django-crispy-forms) (0.4.2)
    Collecting typing-extensions>=4
      Downloading typing_extensions-4.9.0-py3-none-any.whl (32 kB)
    Installing collected packages: typing-extensions, asgiref, django, django-crispy-forms
      Attempting uninstall: asgiref
        Found existing installation: asgiref 3.5.0
        Uninstalling asgiref-3.5.0:
          Successfully uninstalled asgiref-3.5.0
      Attempting uninstall: django
        Found existing installation: Django 4.0.2
        Uninstalling Django-4.0.2:
          Successfully uninstalled Django-4.0.2
    Successfully installed asgiref-3.7.2 django-4.2.8 django-crispy-forms-2.1 typing-extensions-4.9.0
    WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

    [notice] A new release of pip is available: 23.0.1 -> 23.3.2
    [notice] To update, run: pip install --upgrade pip
================================================
75- Check requirements.txt must be like this 
asgiref==3.5.0
Django==4.0.2
psycopg2-binary==2.9.3
sqlparse==0.4.2
tzdata==2021.5
================================================
76- in another Terminal  (Server should be acticeted now)
docker-compose exec web pip freeze > requirements.txt
================================================
77- Check requirements.txt must be Changed like this 
asgiref==3.7.2
Django==4.2.8
django-crispy-forms==2.1
psycopg2-binary==2.9.3
sqlparse==0.4.2
typing_extensions==4.9.0
tzdata==2021.5
================================================
78- write this into config/settings.py in INSTALLED_APPS > after Djangop default Apps
# Third Parties
'crispy_forms',
================================================
79- for convinience way to after this step, write this in Terminal
pipenv install

Output like this:
    Creating a virtualenv for this project...
    Pipfile: /home/sina/01-Repo/2_Django_Haji/Pipfile
    Using default python from /usr/bin/python3 (3.10.12) to create virtualenv...
    ⠙ Creating virtual environment...created virtual environment CPython3.10.12.final.0-64 in 122ms
    creator CPython3Posix(dest=/home/sina/.local/share/virtualenvs/2_Django_Haji-xugyoog1, clear=False, no_vcs_ignore=False, global=False)
    seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/sina/.local/share/virtualenv)
        added seed packages: pip==23.3.2, setuptools==69.0.3, wheel==0.42.0
    activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator

    ✔ Successfully created virtual environment!
    Virtualenv location: /home/sina/.local/share/virtualenvs/2_Django_Haji-xugyoog1
    requirements.txt found in /home/sina/01-Repo/2_Django_Haji instead of Pipfile! Converting...
    ⠧ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/asgiref/json
    ⠧ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/django/json
    ⠧ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/django-crispy-forms/json
    ⠇ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/psycopg2-binary/json
    ⠇ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/sqlparse/json
    ⠇ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/typing-extensions/json
    ⠇ Importing requirements...WARNING:pipenv.patched.pip._vendor.urllib3.connectionpool:Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError("HTTPSConnectionPool(host='pypi.org', port=443): Read timed out. (read timeout=0.3)")': /pypi/tzdata/json
    ✔ Success!
    Warning: Your Pipfile now contains pinned versions, if your requirements.txt did. 
    We recommend updating your Pipfile to specify the "*" version, instead.
    Pipfile.lock not found, creating...
    Locking [packages] dependencies...
    Building requirements...
    Resolving dependencies...
    ✔ Success!
    Locking [dev-packages] dependencies...
    Updated Pipfile.lock (c3549fe1e50dc55fa9c8b23687cbaf61969bb805143bc87643d6de546faa9413)!
    Installing dependencies from Pipfile.lock (aa9413)...
    To activate this project's virtualenv, run pipenv shell.
    Alternatively, run a command inside the virtualenv with pipenv run.    
================================================
80- for running any command for (docker-compose exec web ...) in terminal 
(2_Django_Haji) sina@linux:~/01-Repo/2_Django_Haji$ deactivate
                                                   -------------
Output:
sina@linux:~/01-Repo/2_Django_Haji$ 

🧲🧲
From now on, execute Docker-compose commands inside this terminal,
when the pipenv environment is not active.
================================================
81- Create _base.html in templates directory
_base.html
================================================
82- write html:5 in file _base.html and Press Enter(return)
Output should be like these:
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
    </head>
    <body>
    </body>
    </html>
================================================
83- search in browser "bootstrap"
https://www.google.com/search?channel=fs&client=ubuntu-sn&q=bootstrap
================================================
84- Copy "Bootstrap CSS" from this link
https://getbootstrap.com/docs/5.3/getting-started/introduction/
It may look like this code:
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
================================================
85- Paste that in head tag of _base.html
...
<head>
    ...
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>
...
================================================
86- Copy <script> tag for our JavaScript bundle from this link
https://getbootstrap.com/docs/5.3/getting-started/introduction/
It may look like this code:
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
================================================
87- Paste that end of body tag in _base.html
...
<body>    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
</body>
...
================================================
88- Change title of _base.html like this
<title>{% block page_title %}{% endblock %}</title>
================================================
89- inside body tag of _base.html add this
<body>
    {% block content %}
    {% endblock %}
    ...
================================================
90- change inside home.html like this
{% extends '_base.html' %}
{% block page_title %}
    Home
{% endblock %}
{% block content %}
    Home Page is Here Dear Sina :)
{% endblock %}
================================================
91- Copy all of home.html 
Paste on login.html
================================================
92- Change login.html like these
{% extends '_base.html' %}
{% block page_title %}
    Login
{% endblock %}
{% block content %}
    <form action="" method="post">
        {% csrf_token %}
        {{ form.as_p }}
        <input type="submit" value="Login">
    </form>
{% endblock %}
================================================
93- Copy all login.html
Paste on signup.html
================================================
94- Change signup.html like these
{% extends '_base.html' %}
{% block page_title %}
    Signup
{% endblock %}
{% block content %}
    <form action="" method="post">
        {% csrf_token %}
        {{ form.as_p }}
        <input type="submit" value="Signup">
    </form>
{% endblock %}
================================================
95- Check site in broswer all fonts should be changed
http://127.0.0.1:8000/
================================================
96- in end of config/settings.py
# crispy forms settings
CRISPY_TEMPLATE_PACK = 'bootstrap'
================================================
97- add this in after {extends} login.html like this
{% extends '_base.html' %}
{% load crispy_forms_tags %}
...
================================================
98- Change this line in login.html like this
...
{{ form|crispy }}
...
================================================
99- Apply the previous two steps to the signup.html page
...
{% load crispy_forms_tags %}
...
{{ form|crispy }}
...
================================================
100- Check these
100-1 Check this link for dependencies of crispy_forms:
    https://django-crispy-forms.readthedocs.io/en/latest/install.html#template-packs

100-2 Install crispy-bootstrap4 from this link
    https://pypi.org/project/crispy-bootstrap4/
    1- in another Terminal vscode 
    2- don't activate pipenv or another environments
    for docker command is like this: 
        docker-compose exec web pip install crispy-bootstrap4
    Output it may look like this code:
        Collecting crispy-bootstrap4
            Downloading crispy_bootstrap4-2023.1-py3-none-any.whl (22 kB)
        Requirement already satisfied: django>=4.2 in /usr/local/lib/python3.9/site-packages (from crispy-bootstrap4) (4.2.8)
        Requirement already satisfied: django-crispy-forms>=2.0 in /usr/local/lib/python3.9/site-packages (from crispy-bootstrap4) (2.1)
        Requirement already satisfied: asgiref<4,>=3.6.0 in /usr/local/lib/python3.9/site-packages (from django>=4.2->crispy-bootstrap4) (3.7.2)
        Requirement already satisfied: sqlparse>=0.3.1 in /usr/local/lib/python3.9/site-packages (from django>=4.2->crispy-bootstrap4) (0.4.2)
        Requirement already satisfied: typing-extensions>=4 in /usr/local/lib/python3.9/site-packages (from asgiref<4,>=3.6.0->django>=4.2->crispy-bootstrap4) (4.9.0)
        Installing collected packages: crispy-bootstrap4
        Successfully installed crispy-bootstrap4-2023.1
        WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

        [notice] A new release of pip is available: 23.0.1 -> 23.3.2
        [notice] To update, run: pip install --upgrade pip
================================================
101- add this in config/settings.py INSTALLED_APPS list 
...
# Third Parties
'crispy_forms',
"crispy_bootstrap4",
...
================================================
102- add this in config/settings.py like this
...
# crispy forms settings
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = 'bootstrap4'
================================================
103- Check these links should be changed
1-
http://127.0.0.1:8000/accounts/login/
2-
http://127.0.0.1:8000/accounts/signup/
================================================
103- 
================================================
================================================
================================================
================================================
================================================
Rebuild Server
docker-compose up --build
Output should be like this:
